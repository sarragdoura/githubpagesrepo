{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/my-app-2/src/components/series/Serie_table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table, Radio, Divider } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Serie Name',\n  dataIndex: 'SerieName',\n  render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 23\n  }, this)\n}, {\n  title: 'Protocole Name',\n  dataIndex: 'ProtocoleName'\n}, {\n  title: 'Nbr Image',\n  dataIndex: 'NbrImage'\n}, {\n  title: 'Nbr Region',\n  dataIndex: 'NbrRegion'\n}, {\n  title: 'Comment',\n  dataIndex: 'Comment'\n}, {\n  title: 'Vue Anatomique',\n  dataIndex: 'VueAnatomique'\n}, {\n  title: 'Injection',\n  dataIndex: 'Injection'\n}, {\n  title: 'Filtres',\n  dataIndex: 'Filtres'\n}, {\n  title: 'Temps Injection',\n  dataIndex: 'TempsInjection'\n}, {\n  title: 'Respiration',\n  dataIndex: 'Respiration'\n}, {\n  title: 'A/M',\n  dataIndex: 'AM'\n}, {\n  title: 'Statuts',\n  dataIndex: 'Statuts'\n}, {\n  title: 'Patient Name',\n  dataIndex: 'PatientName'\n}, {\n  title: 'Study Name',\n  dataIndex: 'StudyName'\n}];\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {// console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: record => ({\n    disabled: record.name === 'Disabled User',\n    // Column configuration not to be checked\n    name: record.name\n  })\n};\nexport default function Serie_table({\n  localData = [],\n  someHandlerProp\n}) {\n  _s();\n\n  const [selectionType, setSelectionType] = useState('checkbox');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: {\n        type: selectionType,\n        ...rowSelection,\n        onChange: (selectedRowKeys, selectedRows) => {\n          console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n          someHandlerProp(selectedRows);\n        }\n      },\n      columns: columns,\n      dataSource: localData,\n      size: \"small\",\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Serie_table, \"uKhWbRYZh0yYhpJtLsBDfeqd9AU=\");\n\n_c = Serie_table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Serie_table\");","map":{"version":3,"sources":["/Users/macbook/Desktop/my-app-2/src/components/series/Serie_table.js"],"names":["React","useEffect","useState","Table","Radio","Divider","columns","title","dataIndex","render","text","rowSelection","onChange","selectedRowKeys","selectedRows","getCheckboxProps","record","disabled","name","Serie_table","localData","someHandlerProp","selectionType","setSelectionType","type","console","log"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,OAAvB,QAAsC,MAAtC;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,SAAS,EAAE,WAFb;AAGEC,EAAAA,MAAM,EAAGC,IAAD,iBAAU;AAAA,cAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAHpB,CADc,EAMd;AACEH,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CANc,EAUd;AACED,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAVc,EAcd;AACED,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAdc,EAkBd;AACED,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAlBc,EAsBd;AACED,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAtBc,EA0Bd;AACED,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CA1Bc,EA8Bd;AACED,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CA9Bc,EAkCd;AACED,EAAAA,KAAK,EAAE,iBADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAlCc,EAsCd;AACED,EAAAA,KAAK,EAAE,aADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAtCc,EA0Cd;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CA1Cc,EA8Cd;AACED,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CA9Cc,EAkDd;AACED,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAlDc,EAsDd;AACED,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAtDc,CAAhB;AA4DA,MAAMG,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CAACC,eAAD,EAAkBC,YAAlB,KAAmC,CAC3C;AACD,GAHkB;AAInBC,EAAAA,gBAAgB,EAAGC,MAAD,KAAa;AAC7BC,IAAAA,QAAQ,EAAED,MAAM,CAACE,IAAP,KAAgB,eADG;AAE7B;AACAA,IAAAA,IAAI,EAAEF,MAAM,CAACE;AAHgB,GAAb;AAJC,CAArB;AAYA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,SAAS,GAAG,EAAd;AAAkBC,EAAAA;AAAlB,CAArB,EAA0D;AAAA;;AAEvE,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,UAAD,CAAlD;AAEA,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,YAAY,EAAE;AACZsB,QAAAA,IAAI,EAAEF,aADM;AAEZ,WAAGX,YAFS;AAGZC,QAAAA,QAAQ,EAAE,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;AAC3CW,UAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBb,eAAgB,EAAhD,EAAmD,gBAAnD,EAAqEC,YAArE;AACAO,UAAAA,eAAe,CAACP,YAAD,CAAf;AACD;AANW,OADhB;AASE,MAAA,OAAO,EAAER,OATX;AAUE,MAAA,UAAU,EAAEc,SAVd;AAWE,MAAA,IAAI,EAAC,OAXP;AAYE,MAAA,UAAU,EAAE;AAZd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAzBuBD,W;;KAAAA,W","sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Radio, Divider } from 'antd';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Serie Name',\r\n    dataIndex: 'SerieName',\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Protocole Name',\r\n    dataIndex: 'ProtocoleName',\r\n  },\r\n  {\r\n    title: 'Nbr Image',\r\n    dataIndex: 'NbrImage',\r\n  },\r\n  {\r\n    title: 'Nbr Region',\r\n    dataIndex: 'NbrRegion',\r\n  },\r\n  {\r\n    title: 'Comment',\r\n    dataIndex: 'Comment',\r\n  },\r\n  {\r\n    title: 'Vue Anatomique',\r\n    dataIndex: 'VueAnatomique',\r\n  },\r\n  {\r\n    title: 'Injection',\r\n    dataIndex: 'Injection',\r\n  },\r\n  {\r\n    title: 'Filtres',\r\n    dataIndex: 'Filtres',\r\n  },\r\n  {\r\n    title: 'Temps Injection',\r\n    dataIndex: 'TempsInjection',\r\n  },\r\n  {\r\n    title: 'Respiration',\r\n    dataIndex: 'Respiration',\r\n  },\r\n  {\r\n    title: 'A/M',\r\n    dataIndex: 'AM',\r\n  },\r\n  {\r\n    title: 'Statuts',\r\n    dataIndex: 'Statuts',\r\n  },\r\n  {\r\n    title: 'Patient Name',\r\n    dataIndex: 'PatientName',\r\n  },\r\n  {\r\n    title: 'Study Name',\r\n    dataIndex: 'StudyName',\r\n  },\r\n];\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    // console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: (record) => ({\r\n    disabled: record.name === 'Disabled User',\r\n    // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\n\r\n\r\nexport default function Serie_table({ localData = [], someHandlerProp }) {\r\n\r\n  const [selectionType, setSelectionType] = useState('checkbox');\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        rowSelection={{\r\n          type: selectionType,\r\n          ...rowSelection,\r\n          onChange: (selectedRowKeys, selectedRows) => {\r\n            console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n            someHandlerProp(selectedRows);\r\n          },\r\n        }}\r\n        columns={columns}\r\n        dataSource={localData}\r\n        size=\"small\"\r\n        pagination={false}\r\n\r\n      />\r\n\r\n    </div>\r\n\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}