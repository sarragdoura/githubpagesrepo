{"ast":null,"code":"import _objectSpread from\"/Users/macbook/Desktop/my-app-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/macbook/Desktop/my-app-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Table,Radio,Divider}from'antd';import{jsx as _jsx}from\"react/jsx-runtime\";var columns=[{title:'Region',dataIndex:'Region',render:function render(text){return/*#__PURE__*/_jsx(\"a\",{children:text});}},{title:'nbr ROIs',dataIndex:'nbrRois'},{title:'Organe',dataIndex:'organe'},{title:'Pathologie',dataIndex:'pathologie'},{title:'Type pathologie',dataIndex:'TypePathologie'},{title:'A/M',dataIndex:'AM'},{title:'Nbr ROIs valide',dataIndex:'NbrROIsValide'},{title:'Statuts',dataIndex:'Statuts'},{title:'Patient Name',dataIndex:'PatientName'},{title:'Study Name',dataIndex:'StudyName'},{title:'Serie Name',dataIndex:'SerieName'},{title:'Protocole Name',dataIndex:'ProtocoleName'},{title:'Nbr Image',dataIndex:'NbrImage'},{title:'Comment',dataIndex:'Comment'}];var rowSelection={onChange:function onChange(selectedRowKeys,selectedRows){// console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n},getCheckboxProps:function getCheckboxProps(record){return{disabled:record.name==='Disabled User',// Column configuration not to be checked\nname:record.name};}};export default function Region_table(_ref){var _ref$localData=_ref.localData,localData=_ref$localData===void 0?[]:_ref$localData,someHandlerProp=_ref.someHandlerProp;var _useState=useState('checkbox'),_useState2=_slicedToArray(_useState,2),selectionType=_useState2[0],setSelectionType=_useState2[1];return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Table,{rowSelection:_objectSpread(_objectSpread({type:selectionType},rowSelection),{},{onChange:function onChange(selectedRowKeys,selectedRows){console.log(\"selectedRowKeys: \".concat(selectedRowKeys),'selectedRows: ',selectedRows);someHandlerProp(selectedRows);}}),columns:columns,dataSource:localData,size:\"small\",pagination:false})});}","map":{"version":3,"sources":["/Users/macbook/Desktop/my-app-2/src/components/regions/Region_table.js"],"names":["React","useEffect","useState","Table","Radio","Divider","columns","title","dataIndex","render","text","rowSelection","onChange","selectedRowKeys","selectedRows","getCheckboxProps","record","disabled","name","Region_table","localData","someHandlerProp","selectionType","setSelectionType","type","console","log"],"mappings":"2SAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,KAAT,CAAgBC,KAAhB,CAAuBC,OAAvB,KAAsC,MAAtC,C,2CACA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,KAAK,CAAE,QADT,CAEEC,SAAS,CAAE,QAFb,CAGEC,MAAM,CAAE,gBAACC,IAAD,qBAAU,mBAAIA,IAAJ,EAAV,EAHV,CADc,CAMd,CACEH,KAAK,CAAE,UADT,CAEEC,SAAS,CAAE,SAFb,CANc,CAUd,CACED,KAAK,CAAE,QADT,CAEEC,SAAS,CAAE,QAFb,CAVc,CAcd,CACED,KAAK,CAAE,YADT,CAEEC,SAAS,CAAE,YAFb,CAdc,CAkBd,CACED,KAAK,CAAE,iBADT,CAEEC,SAAS,CAAE,gBAFb,CAlBc,CAsBd,CACED,KAAK,CAAE,KADT,CAEEC,SAAS,CAAE,IAFb,CAtBc,CA0Bd,CACED,KAAK,CAAE,iBADT,CAEEC,SAAS,CAAE,eAFb,CA1Bc,CA8Bd,CACED,KAAK,CAAE,SADT,CAEEC,SAAS,CAAE,SAFb,CA9Bc,CAkCd,CACED,KAAK,CAAE,cADT,CAEEC,SAAS,CAAE,aAFb,CAlCc,CAsCd,CACED,KAAK,CAAE,YADT,CAEEC,SAAS,CAAE,WAFb,CAtCc,CA0Cd,CACED,KAAK,CAAE,YADT,CAEEC,SAAS,CAAE,WAFb,CA1Cc,CA8Cd,CACED,KAAK,CAAE,gBADT,CAEEC,SAAS,CAAE,eAFb,CA9Cc,CAkDd,CACED,KAAK,CAAE,WADT,CAEEC,SAAS,CAAE,UAFb,CAlDc,CAsDd,CACED,KAAK,CAAE,SADT,CAEEC,SAAS,CAAE,SAFb,CAtDc,CAAhB,CA4DA,GAAMG,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,kBAACC,eAAD,CAAkBC,YAAlB,CAAmC,CAC3C;AACD,CAHkB,CAInBC,gBAAgB,CAAE,0BAACC,MAAD,QAAa,CAC7BC,QAAQ,CAAED,MAAM,CAACE,IAAP,GAAgB,eADG,CAE7B;AACAA,IAAI,CAAEF,MAAM,CAACE,IAHgB,CAAb,EAJC,CAArB,CAaA,cAAe,SAASC,CAAAA,YAAT,MAA0D,yBAAlCC,SAAkC,CAAlCA,SAAkC,yBAAtB,EAAsB,gBAAlBC,eAAkB,MAAlBA,eAAkB,eAE7BnB,QAAQ,CAAC,UAAD,CAFqB,wCAEhEoB,aAFgE,eAEjDC,gBAFiD,eAIvE,mBACE,kCACE,KAAC,KAAD,EACE,YAAY,8BACVC,IAAI,CAAEF,aADI,EAEPX,YAFO,MAGVC,QAAQ,CAAE,kBAACC,eAAD,CAAkBC,YAAlB,CAAmC,CAC3CW,OAAO,CAACC,GAAR,4BAAgCb,eAAhC,EAAmD,gBAAnD,CAAqEC,YAArE,EACAO,eAAe,CAACP,YAAD,CAAf,CAED,CAPS,EADd,CAUE,OAAO,CAAER,OAVX,CAWE,UAAU,CAAEc,SAXd,CAYE,IAAI,CAAC,OAZP,CAaE,UAAU,CAAE,KAbd,EADF,EADF,CAqBG","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table, Radio, Divider } from 'antd';\r\nconst columns = [\r\n  {\r\n    title: 'Region',\r\n    dataIndex: 'Region',\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'nbr ROIs',\r\n    dataIndex: 'nbrRois',\r\n  },\r\n  {\r\n    title: 'Organe',\r\n    dataIndex: 'organe',\r\n  },\r\n  {\r\n    title: 'Pathologie',\r\n    dataIndex: 'pathologie',\r\n  },\r\n  {\r\n    title: 'Type pathologie',\r\n    dataIndex: 'TypePathologie',\r\n  },\r\n  {\r\n    title: 'A/M',\r\n    dataIndex: 'AM',\r\n  },\r\n  {\r\n    title: 'Nbr ROIs valide',\r\n    dataIndex: 'NbrROIsValide',\r\n  },\r\n  {\r\n    title: 'Statuts',\r\n    dataIndex: 'Statuts',\r\n  }, \r\n  {\r\n    title: 'Patient Name',\r\n    dataIndex: 'PatientName',\r\n  },\r\n  {\r\n    title: 'Study Name',\r\n    dataIndex: 'StudyName',\r\n  },\r\n  {\r\n    title: 'Serie Name',\r\n    dataIndex: 'SerieName',\r\n  },\r\n  {\r\n    title: 'Protocole Name',\r\n    dataIndex: 'ProtocoleName',\r\n  },\r\n  {\r\n    title: 'Nbr Image',\r\n    dataIndex: 'NbrImage',\r\n  },\r\n  {\r\n    title: 'Comment',\r\n    dataIndex: 'Comment',\r\n  },  \r\n];\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    // console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: (record) => ({\r\n    disabled: record.name === 'Disabled User',\r\n    // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\n\r\n\r\n\r\nexport default function Region_table({ localData = [], someHandlerProp}) {\r\n  \r\n  const [selectionType, setSelectionType] = useState('checkbox');\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        rowSelection={{\r\n          type: selectionType,\r\n          ...rowSelection,\r\n          onChange: (selectedRowKeys, selectedRows) => {\r\n            console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n            someHandlerProp(selectedRows);\r\n\r\n          },\r\n        }}\r\n        columns={columns}\r\n        dataSource={localData}\r\n        size=\"small\"\r\n        pagination={false}\r\n\r\n      />\r\n\r\n    </div>\r\n\r\n  );}"]},"metadata":{},"sourceType":"module"}